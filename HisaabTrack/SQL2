CREATE TABLE IF NOT EXISTS adminSupplier(
	adminID INT,
   	supplierID INT
);
TRUNCATE TABLE SupplierDeliveredOrders;
TRUNCATE TABLE SupplierPendingOrders;
TRUNCATE TABLE ProductCatalogProducts;
TRUNCATE TABLE StoreStock;
TRUNCATE TABLE AdminUnpaidInvoices;
TRUNCATE TABLE AdminInventoryManager;
TRUNCATE TABLE ProductCatalog;
TRUNCATE TABLE Stock;
TRUNCATE TABLE Product;
TRUNCATE TABLE Report;
TRUNCATE TABLE Invoice;
TRUNCATE TABLE Supplier;
TRUNCATE TABLE ManagerStore;
TRUNCATE TABLE Store;
TRUNCATE TABLE InventoryManager;
TRUNCATE TABLE Admin;
TRUNCATE TABLE InvoiceProduct;
TRUNCATE TABLE adminSupplier;
-- Printing the tables
SELECT * FROM SupplierDeliveredOrders;
SELECT * FROM SupplierPendingOrders;
SELECT * FROM ProductCatalogProducts;
SELECT * FROM StoreStock;
SELECT * FROM AdminUnpaidInvoices;
SELECT * FROM AdminInventoryManager;
SELECT * FROM ProductCatalog;
SELECT * FROM Stock;
SELECT * FROM Product;
SELECT * FROM Report;
SELECT * FROM Invoice;
SELECT * FROM InvoiceProduct;
SELECT * FROM Supplier;
SELECT * FROM ManagerStore;
SELECT * FROM Store;
SELECT * FROM InventoryManager;
SELECT * FROM Admin;
SELECT * FROM InvoiceProduct;
SELECT * FROM adminSupplier;
-- DELETE statements for all tables

DELETE FROM SupplierDeliveredOrders;
DELETE FROM SupplierPendingOrders;
DELETE FROM ProductCatalogProducts;
DELETE FROM StoreStock;
DELETE FROM AdminUnpaidInvoices;
DELETE FROM AdminInventoryManager;
DELETE FROM ProductCatalog ;
DELETE FROM Stock;
DELETE FROM Product;
DELETE FROM Report;
DELETE FROM Supplier;
DELETE FROM ManagerStore;
DELETE FROM Store;
DELETE FROM InventoryManager;
DELETE FROM Admin;
DELETE FROM adminSupplier;
INSERT INTO Store (location)
VALUES
    ('Location 1'),
    ('Location 2'),
    ('Location 3'),
    ('Location 4'),
    ('Location 5'),
    ('Location 6'),
    ('Location 7'),
    ('Location 8'),
    ('Location 9'),
    ('Location 10'),
    ('Location 11'),
    ('Location 12'),
    ('Location 13'),
    ('Location 14'),
    ('Location 15'),
    ('Location 16'),
    ('Location 17'),
    ('Location 18'),
    ('Location 19'),
    ('Location 20');
    
SELECT 
    a.adminID, 
    s.supplierID, 
    s.companyName, 
    s.location, 
    s.registrationNum, 
    s.password, 
    cp.productID, 
    cp.quantity
FROM 
    Supplier s
JOIN 
    adminSupplier a ON a.supplierID = s.supplierID
LEFT JOIN 
    ProductCatalogProducts cp ON cp.catalogID = s.supplierID
LEFT JOIN 
    Product p ON cp.productID = p.productID;

INSERT INTO Supplier (companyName, location, registrationNum, balance, password)
VALUES ('Supplier1', 'CityA', 101, 1000.00, 'pass123');

INSERT INTO Supplier (companyName, location, registrationNum, balance, password)
VALUES ('Supplier2', 'CityB', 102, 2000.00, 'pass456');
SELECT 
    s.supplierID, 
    s.companyName, 
    s.location AS supplierLocation, 
    i.invoiceID, 
    ip.productID, 
    p.name AS productName, 
    p.description AS productDescription, 
    ip.quantity AS quantityDelivered, 
    i.createdOn AS deliveryDate, paid, delivered
FROM 
    Supplier s
LEFT JOIN 
    SupplierPendingOrders sdo ON s.supplierID = sdo.supplierID
LEFT JOIN 
    Invoice i ON sdo.invoiceID = i.invoiceID
LEFT JOIN 
    InvoiceProduct ip ON i.invoiceID = ip.invoiceID
LEFT JOIN 
    Product p ON ip.productID = p.productID
WHERE 
    delivered = FALSE AND paid = FALSE;
-- Remove all existing records
DELETE FROM adminunpaidInvoices;

-- Add new records
INSERT INTO adminunpaidInvoices (adminID, invoiceID) VALUES (1, 1);
INSERT INTO adminunpaidInvoices (adminID, invoiceID) VALUES (1, 2);
INSERT INTO adminunpaidInvoices (adminID, invoiceID) VALUES (1, 3);
INSERT INTO adminunpaidInvoices (adminID, invoiceID) VALUES (1, 4);
SELECT 
    i.invoiceID, 
    i.createdByID, 
    i.userType, 
    i.paid, 
    i.delivered, 
    i.createdOn, 
    au.adminID
FROM 
    AdminUnpaidInvoices au
JOIN 
    Invoice i ON au.invoiceID = i.invoiceID
WHERE 
    i.paid = FALSE;
SELECT i.invoiceID,
	                           ip.productID, p.name AS productName, p.description AS productDescription, 
	                           ip.quantity, p.price
	                    FROM Invoice i
	                    JOIN InvoiceProduct ip ON i.invoiceID = ip.invoiceID
	                    JOIN Product p ON ip.productID = p.productID
	                    WHERE i.invoiceID = 2
	                    
SELECT 
    i.invoiceID,
    ip.productID,
    p.name AS productName,
    p.description AS productDescription,
    ip.quantity,
    p.price,
    spo.supplierID AS pendingSupplierID,
    sdo.supplierID AS deliveredSupplierID
FROM 
    Invoice i
JOIN 
    InvoiceProduct ip ON i.invoiceID = ip.invoiceID
JOIN 
    Product p ON ip.productID = p.productID
LEFT JOIN 
    SupplierPendingOrders spo ON i.invoiceID = spo.invoiceID
LEFT JOIN 
    SupplierDeliveredOrders sdo ON i.invoiceID = sdo.invoiceID
WHERE 
    i.invoiceID = 1;
DROP TABLE Invoice
CREATE TABLE IF NOT EXISTS Invoice (
    invoiceID INT AUTO_INCREMENT PRIMARY KEY,
    createdByID INT,
    createdOn DATE,
    supplierID INT,
    userType VARCHAR(255),
    paid BOOLEAN, 
    delivered BOOLEAN
);
INSERT INTO Invoice (createdByID, createdOn, supplierID, userType, paid, delivered) 
VALUES (1, '2024-11-01', 1, 'Manager', FALSE, FALSE);

INSERT INTO Invoice (createdByID, createdOn, supplierID, userType, paid, delivered) 
VALUES (1, '2024-11-02', 2, 'Manager', FALSE, FALSE);

INSERT INTO Invoice (createdByID, createdOn, supplierID, userType, paid, delivered) 
VALUES (2, '2024-11-03', 1, 'Manager', FALSE, FALSE);

INSERT INTO Invoice (createdByID, createdOn, supplierID, userType, paid, delivered) 
VALUES (2, '2024-11-04', 2, 'Manager', FALSE, FALSE);
DROP TABLE Invoice
TRUNCATE TABLE Invoice;
DELETE FROM Invoice;
UPDATE Invoice
SET paid = TRUE
WHERE invoiceID = 2;
