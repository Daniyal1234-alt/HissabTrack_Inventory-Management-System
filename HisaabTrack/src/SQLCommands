
-- ADMIN TABLE
CREATE TABLE IF NOT EXISTS Admin (
    adminID INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    CNIC VARCHAR(255) UNIQUE,
    address VARCHAR(255),
    active BOOLEAN,
    password VARCHAR(255)
);
-- INVENTORY MANAGER TABLE
CREATE TABLE IF NOT EXISTS InventoryManager (
    managerID INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    CNIC VARCHAR(255) UNIQUE,
    address VARCHAR(255),
    storeID INT UNIQUE,
    password VARCHAR(255)

);
SELECT * FROM InventoryManager a JOIN admininventorymanager b WHERE a.managerID = b.inventoryManagerID
-- STORE TABLE
CREATE TABLE IF NOT EXISTS Store (
    storeID INT AUTO_INCREMENT PRIMARY KEY,
    location VARCHAR(255),
    managerID INT
);

-- SUPPLIER TABLE
CREATE TABLE IF NOT EXISTS Supplier (
    supplierID INT AUTO_INCREMENT PRIMARY KEY,
    companyName VARCHAR(255),
    location VARCHAR(255),
    registrationNum INT UNIQUE,
    balance FLOAT,
    password VARCHAR(255)
);

-- INVOICE TABLE
CREATE TABLE IF NOT EXISTS Invoice (
    invoiceID INT AUTO_INCREMENT PRIMARY KEY,
    createdByID INT,
    createdOn DATE,
    userType VARCHAR(255),
    paid BOOLEAN, 
    delivered BOOLEAN
);
-- REPORT TABLE
CREATE TABLE IF NOT EXISTS Report (
    reportID INT AUTO_INCREMENT PRIMARY KEY,
    createdByID INT,
    createdOn DATE,
    userType VARCHAR(255)
);

-- PRODUCT TABLE 
CREATE TABLE IF NOT EXISTS Product (
    productID INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR(255),
    price DOUBLE,
    MFG DATE,
    EXP DATE
);
-- STOCK TABLE
CREATE TABLE IF NOT EXISTS Stock (
    stockID INT AUTO_INCREMENT PRIMARY KEY,
    productID INT, 
    quantity INT,
    totalCost DOUBLE,
    arrivalDate DATE
);

-- PRODUCT CATALOG TABLE
CREATE TABLE IF NOT EXISTS ProductCatalog (
    productCatalogID INT ,
    supplierID INT
);

-- ADMIN - INVENTORYMANAGER TABLE
CREATE TABLE IF NOT EXISTS AdminInventoryManager (
    adminID INT,
    inventoryManagerID INT
);

-- ADMIN-UNPAID INVOICES TABLE
CREATE TABLE IF NOT EXISTS AdminUnpaidInvoices (
    adminID INT,
    invoiceID INT
);

-- STORE-STOCK RELATION TABLE
CREATE TABLE IF NOT EXISTS StoreStock (
    storeID INT,
    stockID INT
);

-- PRODUCT CATALOG-PRODUCTS TABLE
CREATE TABLE IF NOT EXISTS ProductCatalogProducts (
    catalogID INT,
    productID INT,
    quantity INT
);

-- SUPPLIER-PENDING ORDERS TABLE
CREATE TABLE IF NOT EXISTS SupplierPendingOrders (
    supplierID INT,
    invoiceID INT
);
-- SUPPLIER-DELIVERED ORDERS TABLES
CREATE TABLE IF NOT EXISTS SupplierDeliveredOrders (
    supplierID INT,
    invoiceID INT
);
drop table SupplierdDeliveredOrders
-- Manager-Store Table
CREATE TABLE IF NOT EXISTS ManagerStore (
    managerID INT,
   	storeID INT
);

INSERT INTO Store (location, managerID)
VALUES
    ('Location 1', 0),
    ('Location 2', 0),
    ('Location 3', 0),
    ('Location 4', 0),
    ('Location 5', 0),
    ('Location 6', 0),
    ('Location 7', 0),
    ('Location 8', 0),
    ('Location 9', 0),
    ('Location 10', 0),
    ('Location 11', 0),
    ('Location 12', 0),
    ('Location 13', 0),
    ('Location 14', 0),
    ('Location 15', 0),
    ('Location 16', 0),
    ('Location 17', 0),
    ('Location 18', 0),
    ('Location 19', 0),
    ('Location 20', 0);

SHOW TABLES
TRUNCATE TABLE SupplierdDeliveredOrders;
TRUNCATE TABLE SupplierPendingOrders;
TRUNCATE TABLE ProductCatalogProducts;
TRUNCATE TABLE StoreStock;
TRUNCATE TABLE AdminUnpaidInvoices;
TRUNCATE TABLE AdminInventoryManager;
TRUNCATE TABLE ProductCatalog;
TRUNCATE TABLE Stock;
TRUNCATE TABLE Product;
TRUNCATE TABLE Report;
TRUNCATE TABLE Invoice;
TRUNCATE TABLE Supplier;
TRUNCATE TABLE ManagerStore;
TRUNCATE TABLE Store;
TRUNCATE TABLE InventoryManager;
TRUNCATE TABLE Admin;
SELECT i.invoiceID, i.createdByID, i.createdOn, i.userType, i.paid, i.delivered, sdo.supplierID
    FROM Invoice i
    JOIN SupplierDeliveredOrders sdo ON i.invoiceID = sdo.invoiceID
    WHERE i.delivered = TRUE